{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","selectedTabContent","onTabSelected","validSelectedTabId","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","setselectedTabId","selectedTabTitle","setSelectedTabTitle","setSelectedTabContent","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,cAIMC,EAFmBJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,KAGjDA,EACAD,EAAK,GAAGO,GAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IACT,CAAE,YAAaJ,EAAIC,KAAOH,IAE5B,UAAQ,MALV,SAOE,mBACEO,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHN,EAAIC,KAAOH,GACbD,EAAcG,IALpB,SASGA,EAAIO,SAfFP,EAAIC,WAsBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGN,QC5CIF,EAAO,CAClB,CAAEO,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBgB,EAAtB,KACA,EAAgDD,mBAAShB,EAAK,GAAGa,OAAjE,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAoDH,mBAAShB,EAAK,GAAGc,SAArE,mBAAOZ,EAAP,KAA2BkB,EAA3B,KAQA,OACE,sBAAKZ,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAU,KAGH,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAeA,EACfC,mBAAoBA,EACpBC,cAlBgB,SAACG,GACrBW,EAAiBX,EAAIC,IACrBY,EAAoBb,EAAIO,OACxBO,EAAsBd,EAAIQ,gBClB9BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48536a1a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (params: Tab) => void,\n  selectedTabContent: string\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  selectedTabContent,\n  onTabSelected,\n}) => {\n  const validSelectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const validSelectedTabId = validSelectedTab\n    ? selectedTabId\n    : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab: Tab) => (\n            <li\n              key={tab.id}\n              className={classNames(\n                { 'is-active': tab.id === validSelectedTabId },\n              )}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== validSelectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setselectedTabId] = useState(tabs[0].id);\n  const [selectedTabTitle, setSelectedTabTitle] = useState(tabs[0].title);\n  const [selectedTabContent, setSelectedTabContent] = useState(tabs[0].content);\n\n  const onTabSelected = (tab: Tab): void => {\n    setselectedTabId(tab.id);\n    setSelectedTabTitle(tab.title);\n    setSelectedTabContent(tab.content);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTabTitle}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        selectedTabContent={selectedTabContent}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}